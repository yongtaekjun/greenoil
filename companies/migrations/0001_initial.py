# Generated by Django 2.1.4 on 2019-04-17 10:09

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=64)),
                ('province', models.CharField(default='Ontario', max_length=64)),
                ('country', models.CharField(default='Canada', max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('short_name', models.CharField(max_length=32, primary_key=True, serialize=False, unique=True)),
                ('full_name', models.CharField(max_length=128)),
                ('unit_number', models.CharField(blank=True, max_length=4, null=True)),
                ('street', models.CharField(max_length=128)),
                ('postal_code', models.CharField(max_length=128)),
                ('phone', models.CharField(max_length=16)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, default='company_images/default.jpg', null=True, upload_to='company_images')),
                ('registered_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('approved_on', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(blank=True, default=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.PositiveSmallIntegerField(choices=[('Company', ((111, 'Owner/CEO'), (113, 'Manager'), (115, 'Receptionist'), (117, 'Marketer'), (119, 'Sales Person'), (121, 'Accountant'), (123, 'Director'), (125, 'Vice President'), (127, 'HR Specialist'), (141, 'System Operator'))), ('Oil Collector', ((211, 'Truck Driver'), (213, 'Tank Installer'), (217, 'Welder'), (218, 'In-house Handler'), (219, 'Dispatcher'))), ('Information Technology', ((912, 'Server Administrator'), (914, 'Graphic Designer'), (916, 'Project Manager'), (918, 'Consultant'), (921, 'Business Logic Analyzer'), (923, 'Data Model Designer'), (951, 'Programmer'), (953, 'WEB Front-End Programmer'), (955, 'Android Programmer'), (957, 'iOS Programmer'), (961, 'Back-End Programmer'), (962, 'Fullstack Programmer'), (971, 'System Architect')))], default=111)),
                ('is_active', models.BooleanField(default=False)),
                ('started_on', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OilCollector',
            fields=[
                ('company', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='companies.Company')),
            ],
            bases=('companies.company',),
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('company', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='restaurant_company', serialize=False, to='companies.Company')),
                ('division', models.SmallIntegerField(choices=[(0, 'North'), (45, 'North East'), (90, 'East'), (135, 'South East'), (180, 'South'), (225, 'South West'), (270, 'West'), (315, 'North West')], default=225)),
            ],
            bases=('companies.company',),
        ),
        migrations.AddField(
            model_name='userrole',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='companies.Company'),
        ),
        migrations.AddField(
            model_name='userrole',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userrole', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='company',
            name='city',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_city', to='companies.City'),
        ),
        migrations.AddField(
            model_name='company',
            name='staffs',
            field=models.ManyToManyField(through='companies.UserRole', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='OilCollectContract',
            fields=[
                ('restaurant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='oil_collect_contract_restaurant', serialize=False, to='companies.Restaurant')),
                ('rate', models.DecimalField(decimal_places=4, max_digits=10)),
                ('tank_size', models.PositiveSmallIntegerField(choices=[(16, '  4 Gallon (  16 L ) Pail'), (200, ' 55 Gallon ( 200 L ) Drum'), (400, '110 Gallon ( 400 L ) BIn'), (600, '158 Gallon ( 600 L ) BIn'), (800, '211 Gallon ( 800 L ) BIn'), (1000, '264 Gallon (1000 L ) BIn')], default=200)),
                ('tank_direction', models.PositiveSmallIntegerField(default=7)),
                ('tank_distance', models.PositiveSmallIntegerField(default=10)),
                ('is_active', models.BooleanField(default=True)),
                ('agreeded_on', models.DateTimeField()),
                ('collector', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='oil_collect_contract_collector', to='companies.OilCollector')),
                ('referal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='oil_collect_contract_referal', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='userrole',
            unique_together={('user', 'company', 'role')},
        ),
    ]
